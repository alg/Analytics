#front
  .row
    .span2
      &nbsp;
    .span8
      %table{:style=>"width:100%;"}
        %tr#statebar
          %td#doing{:style=>"width:25%;"}
            Create
          %td#todo{:style=>"width:25%;"}
            Add Logs
          %td#todo{:style=>"width:25%;"}
            Add Voters
          %td#todo{:style=>"width:25%;"}
            Analyze
      %hr
  .row
    .span2.sidebar
      %p
        Your first step is to create a new election event, using the name of
        the election (for example, "Primary Election") and the election and
        voter activity dates.
      %p
        The start date for an electionâ€™s voter activity is typically the
        day after the previous election day.  The end date is typically the 
        date when the election will certified, after which no further
        ballots will be counted. 
    .span9
      = form_for @election do |f|
        -if @election.errors.any?
          #error_explanation{:style=>"color:red;"}
            %h3{:style=>"color:red;"}= "WARNING: #{pluralize(@election.errors.count, "error")} prohibited this election from being saved:"
            %ul
              - @election.errors.full_messages.each do |msg|
                %li= msg
  
        .field
          = f.label 'Election Name', :class => 'capbold'
          = f.text_field :name
        %br
        .field
          = f.label 'Election Date', :class => 'capbold'
          = f.date_select :day
        %br
        .field
          = f.label 'Start Date for Voter Activity', :class => 'capbold'
          = f.date_select :voter_start_day
        %br
        .field
          = f.label 'End Date for Voter Activity', :class => 'capbold'
          = f.date_select :voter_end_day
        .row#positionbacknext
          .span7
            &nbsp;
          .span1
            .actions
              = f.submit 'Next', :class => 'btnbacknext'
  .row#positionbacknext
    .span2
      &nbsp;
    .span1#statebacknext
      = link_to 'Back', :root
